{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","api.ts","types/Movie.ts","helpers/helpers.ts","components/FindMovie/FindMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","React","memo","movie","imdbUrl","imgUrl","title","description","className","src","alt","href","MoviesList","movies","map","imdbId","getMovie","query","fetch","then","res","json","catch","Response","Error","Movie","createMovie","movieData","Title","Plot","Poster","imdbID","FindMovie","message","addMovie","useState","setQuery","isLoading","setIsLoading","errorMessage","setErrorMessage","setMovie","loadMovie","event","a","preventDefault","serverResponse","foundMovie","onSubmit","htmlFor","type","id","placeholder","value","onChange","target","classNames","disabled","trim","onClick","App","setMovies","useCallback","newMovie","some","prevMovies","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c1909436.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = React.memo(\n  ({ movie }) => {\n    const {\n      imdbUrl, imgUrl, title, description,\n    } = movie;\n\n    return (\n      <div className=\"card\" data-cy=\"movieCard\">\n        <div className=\"card-image\">\n          <figure className=\"image is-4by3\">\n            <img\n              data-cy=\"moviePoster\"\n              src={imgUrl}\n              alt=\"Film logo\"\n            />\n          </figure>\n        </div>\n\n        <div className=\"card-content\">\n          <div className=\"media\">\n            <div className=\"media-left\">\n              <figure className=\"image is-48x48\">\n                <img\n                  src=\"images/imdb-logo.jpeg\"\n                  alt=\"imdb\"\n                />\n              </figure>\n            </div>\n            <div className=\"media-content\">\n              <p className=\"title is-8\" data-cy=\"movieTitle\">{title}</p>\n            </div>\n          </div>\n\n          <div className=\"content\" data-cy=\"movieDescription\">\n            {description}\n            <br />\n            <a href={imdbUrl} data-cy=\"movieURL\">\n              IMDB\n            </a>\n          </div>\n        </div>\n      </div>\n    );\n  },\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nconst API_URL = 'https://www.omdbapi.com/?apikey=de0f1d00';\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","export class Movie {\n  constructor(\n    public title: string,\n    public description: string,\n    public imgUrl: string,\n    public imdbUrl: string,\n    public imdbId: string,\n  ) {}\n}\n","import { Movie } from '../types/Movie';\nimport { MovieData } from '../types/MovieData';\n\nexport const createMovie = (movieData: MovieData) => {\n  const {\n    Title: title,\n    Plot: description,\n    Poster,\n    imdbID: imdbId,\n  } = movieData;\n\n  const defaultPoster = (\n    'https://via.placeholder.com/360x270.png?text=no%20preview'\n  );\n\n  const imgUrl = Poster === 'N/A'\n    ? defaultPoster\n    : Poster;\n\n  const imdbUrl = `https://www.imdb.com/title/${imdbId}`;\n\n  const movie = new Movie(title, description, imgUrl, imdbUrl, imdbId);\n\n  return movie;\n};\n\nexport const showErrorMessage: (message: string) => string = (message) => {\n  return message === 'Movie not found!'\n    ? 'Can\\'t find a movie with such a title'\n    : 'Unexpected error';\n};\n","import React, { useState } from 'react';\nimport './FindMovie.scss';\nimport classNames from 'classnames';\nimport { getMovie } from '../../api';\nimport { showErrorMessage, createMovie } from '../../helpers/helpers';\nimport { Movie } from '../../types/Movie';\nimport { MovieCard } from '../MovieCard';\n\ntype Props = {\n  addMovie: (movie: Movie) => void,\n};\n\nexport const FindMovie: React.FC<Props> = ({ addMovie }) => {\n  const [query, setQuery] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n  const [movie, setMovie] = useState<Movie | null>(null);\n\n  const handleInput = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setErrorMessage('');\n    setQuery(event.target.value);\n  };\n\n  const handleAddMovieClick = () => {\n    if (movie) {\n      addMovie(movie);\n      setMovie(null);\n      setQuery('');\n    }\n  };\n\n  const loadMovie = async (event: React.FormEvent<HTMLFormElement>) => {\n    try {\n      event.preventDefault();\n      setIsLoading(true);\n\n      const serverResponse = await getMovie(query);\n\n      if ('Error' in serverResponse) {\n        setErrorMessage(serverResponse.Error);\n\n        return;\n      }\n\n      const foundMovie = createMovie(serverResponse);\n\n      setMovie(foundMovie);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <>\n      <form\n        className=\"find-movie\"\n        onSubmit={loadMovie}\n      >\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className=\"input is-dander\"\n              value={query}\n              onChange={handleInput}\n            />\n          </div>\n\n          {errorMessage && (\n            <p className=\"help is-danger\" data-cy=\"errorMessage\">\n              {showErrorMessage(errorMessage)}\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              className={classNames(\n                'button',\n                'is-light',\n                { 'is-loading': isLoading },\n              )}\n              disabled={!query.trim()}\n            >\n              {movie ? 'Search again' : 'Find a movie'}\n            </button>\n          </div>\n\n          {movie && (\n            <div className=\"control\">\n              <button\n                data-cy=\"addButton\"\n                type=\"button\"\n                className=\"button is-primary\"\n                onClick={handleAddMovieClick}\n              >\n                Add to the list\n              </button>\n            </div>\n          )}\n        </div>\n      </form>\n\n      {movie && (\n        <div className=\"container\" data-cy=\"previewContainer\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard movie={movie} />\n        </div>\n      )}\n    </>\n  );\n};\n","import React, { useCallback, useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\n\nexport const App: React.FC = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  const addMovie = useCallback((newMovie: Movie) => {\n    const movieIsAdded = movies.some(movie => newMovie.imdbId === movie.imdbId);\n\n    if (movieIsAdded) {\n      return;\n    }\n\n    setMovies(prevMovies => [\n      ...prevMovies,\n      newMovie,\n    ]);\n  }, [movies]);\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie\n          addMovie={addMovie}\n        />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}